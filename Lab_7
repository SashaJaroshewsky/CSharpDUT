using System;
using System.Collections.Generic;
using static System.Console;
using static System.Convert;

namespace LB7
{
    class Program
    {
        public interface IWorker<T>
        {
            void AddValueToList(T value);
            int GetIndexByValue(T value);
        }
        public class WorkerInt : IWorker<int>
        {
            private List<int> listOfInts;

            public WorkerInt()
            {
                listOfInts = new List<int>();
            }

            public WorkerInt(List<int> ints)
            {
                if (ints == null || ints.Count == 0)
                    throw new ArgumentNullException($"{nameof(ints)} can`t be null");
                listOfInts = ints;
            }

            public List<int> Ints => listOfInts;

            public void AddValueToList(int value)
            {
                listOfInts.Add(value);
            }

            public int GetIndexByValue(int value)
            {
                return listOfInts.IndexOf(value);
            }
        }
        static void Main(string[] args)
        {
            try
            {
                var lists = new List<int>
                {
                    5,
                    43,
                    666,
                    778,
                    678,
                    1234567,
                    30,
                    29,
                    69
                };
                IWorker<int> worker = new WorkerInt(lists);
                WriteLine("Please enter new value for add to list");
                worker.AddValueToList(ToInt32(ReadLine()));
                WriteLine("Enter number for get index of this value");
                int value = ToInt32(ReadLine());
                WriteLine($"Index of {value} is {worker.GetIndexByValue(value)}");
            }
            catch (Exception ex)
            {
                WriteLine(ex.Message);
            }
        }
    }
}
